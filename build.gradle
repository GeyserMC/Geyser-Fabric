plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    implementation 'org.geysermc:core:2.0.0-SNAPSHOT'
    shadow('org.geysermc:core:2.0.0-SNAPSHOT') {
        exclude group: 'com.google.guava', module: "guava"
        exclude group: 'com.google.code.gson', module: "gson"
        exclude group: 'org.slf4j'
    }
}

repositories {
    mavenLocal()

    maven {
        url = uri('https://repo.opencollab.dev/maven-releases/')
    }

    maven {
        url = uri('https://repo.opencollab.dev/maven-snapshots/')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots/')
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    configurations = [project.configurations.shadow]
    relocate("it.unimi.dsi.fastutil", "org.geysermc.relocate.fastutil")
    relocate("org.objectweb.asm", "org.geysermc.relocate.asm")
    relocate("org.yaml", "org.geysermc.relocate.yaml") // https://github.com/CardboardPowered/cardboard/issues/139
    relocate("com.fasterxml.jackson", "org.geysermc.relocate.jackson")
}

jar {
    from "LICENSE"
}

remapJar {
    dependsOn(shadowJar)
    input.set shadowJar.archiveFile.get()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}
